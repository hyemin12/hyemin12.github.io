---
title: 소프트웨어 개발 - 제품 소프트웨어 매뉴얼 작성
date: 2023-10-31 13:24:00 +09:00
categories: ["정보처리기사", "소프트웨어개발"]
tags: ["정보처리기사"]
---

<span style="color:#f00"></span>

## #제품 소프트웨어 매뉴얼 작성

### 제품 소프트웨어 매뉴얼?

제품 소프트웨어 개발 단계부터 적용한 기준이나 패키징 이후 설치 및 사용자 측면의 주요 내용 등을 문서로 기록한 것

사용자 중심의 기능 및 방법을 나탄낸 설명서와 안내서를 의미

### 제품 소프트웨어 설치 매뉴얼?

- 사용자가 제품을 구매한 후 최초 설치 시 참조하는 매뉴얼

- 설치 시작부터 완료할 때까지의 전 과정을 빠짐없이 순서대로 작성

- 설치 과정에서 표시될 수 있는 예외 상황에 관련 내용을 별도로 구분하여 설명

#### ■ 설치 매뉴얼 기본 작성 항목

- 목차 및 개요
- 문서 이력 정보
- 설치 매뉴얼 주석
- 설치 도구의 구성
- 설치 위치 지정

#### ■ 설치 환경 체크 항목

- 사용자 환경
- 응용 프로그램
- 업그레이드 버전
- 백업 폴더 확인

#### ■ 설치 매뉴얼 구성 요소

### <span style="background-color:#ffdce0">@개파절아 삭버고준</span>

- 제품 소프트웨어 개요
- 설치 관련 파일
- 설치 절차
- 설치 아이콘
- 삭제 방법
- 설치 버전 및 작성자
- 고객 지원 방법 및 FAQ
- 준수 정보 & 제한 보증

#### ■ 설치 매뉴얼 작성 프로세스

개요 및 기능 식별 → UI 분류 → 설치 파일/백업 파일 확인 → 삭제 절차 확인 → 이상 유형 확인 → 최종 매뉴얼 적용

### 제품 소프트웨어 사용자 매뉴얼

개발이 완료된 제품 소프트웨어를 고객에게 전달하기 위한 형태로 패키징하고, 설치와 사용에 필요한 제발 절차 및 환경 등을 전체 내용을 포함하는 문서

- 개발된 컴포넌트 사용 시에 알아야할 내용을 기술하며 패키지의 기능, 패키지 인터페이스, 포함하고 있는 메서드나 오페레이션, 메서드의 파라미터 등의 설명이 포함되어 있음

- 사용자가 이해하기 쉽도록 화면을 캡쳐하여 구성하고, 주요 기능에 대해서는 설명 화면을 첨부

- 제품 소프트웨어 동작 시 함께 동작하는 애플리케이션이나 설치되어 충돌될 수 있는 응용프로그램에 대한 설명 포함

#### ■ 사용자 매뉴얼 작성 항목

- 목차 및 개요
- 문서 이력 정보
- 사용자 매뉴얼 주석
- 기록항목
- 기본사항
- 고객 지원 방법 및 FAQ
- 준수 정보 & 제한 보증

#### ■ 사용자 매뉴얼 작성 프로세스

작성 지침 정의 → 사용 설명서 구성 요소 정의 → 구성 요소별 내용 작성 → 사용 설명서 검토

## 국제 표준 제품 품질 특성

제품에 대하여 명확하게 정의된 특성을 의미하며 품질을 평가하는 기준 항목

### 국제 제품 품질 표준

IT 프로젝트를 진행하거나, 완성된 IT 제품에 대해 가능성, 신뢰성 등을 평가하는 기준이 되는 국제 표준

#### ■ ISO/IEC 9126

소프트웨어 품질을 측정하고, 평가하기 위해서 소프트웨어의 품질요소와 특성을 정의

특성:

- 기능성: 요구를 만족하는 기능을 제공하는 능력
- 신뢰성: 성능 수준을 유지할 수 있는 능력
- 사용성: 사용자에 의해 이해/사용/선호될 수 있는 능력
- 효율성: 사용되는 자원의 양에 따라 요구된 성능을 제공하는 능력
- 유지보수성: 소프트웨어 제품이 변경되는 능력
- 이식성: 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 능력

#### ■ ISO/IEC 15498

소프트웨어 제품 평가 프로세스 및 평가 모듈을 제공

특성:

- 반복성: 동일 평가자, 동일 사양으로 평가하면 동일한 결과가 나와야 함
- 재현성: 다른 평가자가 동일 사양을 평가하면 유사한 결과가 나와야 함
- 공정성: 특정 결과에 편향되지 않아야 함
- 객관성: 객관적 자료에 의해서만 평가되어야 함

#### ■ ISO/IEC 12119

소프트웨어 패키지 제품에 대한 품질 요구사항 및 테스트 국제 표준

#### ■ ISO/IEC 25000

= SquaRE (System and Software Quality Requirements ande Evaluation)
소프트웨어 품질 특성, 품질 평가 방법을 통합한 소프트웨어 품질 평가 모델 국제 표준

## 소프트웨어 공학의 기본 원칙

### 소프트웨어 개념

하드웨어를 동작시켜 사용자가 작업을 편리하게 수행하도록하는 프로그램 및 자료구조

#### ■ 소프트웨어 위기?

개발 속도가 하드웨어 개발 속도를 따라가지 못함에 따라 사용자들의 요구사항을 충족시키지 못하는 현상

위기 원인

- 소프트웨어의 특징에 대한 이해 부족
- 소프트웨어의 관리 부재
- 소프트웨어 복잡도 및 크기 증가
- 소프트웨어 수명 주기 단축

극복 방안

- 공학적 접근
- 표준화
- 자동화 도구
- 품질 보증

### 소프트웨어 공학 (Software Engineering)

- 소프트웨어 위기를 극복하기 위한 방안으로 연구된 학문

- 소프트웨어의 개발, 운용, 유지보수 및 파기에 대한 체계적인 접근 방법

- 소프트웨어를 경제적인 비용으로 획득하기 위해 공학적 원리를 정립하고 이를 이용하는 방법

#### ■ 소프트웨어 공학의 원칙

- 현대적인 프로그래밍 기술을 계속적으로 적용
- 개발된 소프트웨어의 품질이 유지되도록 지속적 검증 수행
- 소프트웨어 개발 관련 사항 및 결과에 대한 명확한 기록을 유지

#### ■ 잘 설계된 소프트웨어(Well Engineered Software)

- 유지보수가 용이해야 함
- 신뢰성이 높아야 함
- 충분한 테스팅을 거쳐야 함

#### ■ 소프트웨어 공학 관련 법칙

브룩스의 법칙 (Brooks' Law)

- 인력이 추가되어 개발 생산성이 향상되지 않고, 오히려 그 인력때문에 방해가 된다.

파레토의 법칙 (Pareto Principle)

- 소프트웨어 테스트 원리 중 20%의 모듈에서 80%의 결함이 발견된다는 '결함 집중'의 원리 내포

롱테일 법칙 (Long Tail)

- 사소해 보이는 80%의 다수가 20%의 소수 핵심보다 뛰어난 가치를 장출한다는 법칙
